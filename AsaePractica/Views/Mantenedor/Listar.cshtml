@model VentaListViewModel

@{
    ViewData["Title"] = "Listar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-7">
            <div class="card text-center borderless-card">
                <div class="card-header">Agregar Articulos</div>
                <div class="card-body">
                    <form class="row g-3 needs-validation" novalidate>
                        <div class="col-md-9">
                            <label for="validationCustom01" class="form-label">Agregar Producto(buscar por nombre)</label>
                            <select class="form-select" id="cboProductos">
                                <option value="0" selected="selected">Seleccione</option>
                                @foreach (var Articulo in Model.Productos)
                                {
                                    <option value="@Articulo.IdProducto" data-categoria="@Articulo.Categoria" data-nombre="@Articulo.Nombre">@Articulo.Descripcion</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label for="txtCantidad" class="form-label">Cantidad</label>
                            <input type="text" class="form-control" id="txtCantidad" value="0" required>
                        </div>
                        <div class="col-12">
                            <a class="btn btn-danger btn-sm mb-3" id="cmdAddTable">
                                <i class="bi bi-plus-circle"></i> Agregar
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="card shadow-custom">
                <div class="card-header">Información del Articulo</div>
                <div class="card-body">
                    <div class="row">
                        <table>
                            <tr>
                                <td>Nombre</td>
                                <td id="productoNombre"></td>
                            </tr>
                            <tr>
                                <td>Descripción</td>
                                <td id="productoDescripcion"></td>
                            </tr>
                            <tr>
                                <td>Categoria</td>
                                <td id="productoCategoria"></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="row">
        <table class="table table-striped table-bordered" id="tbVenta">
            <thead class="bg-dark text-white">
                <tr>
                    <th scope="col">Id Venta</th>
                    <th scope="col">Producto</th>
                    <th scope="col">Cantidad</th>
                    <th scope="col">Tipo precio</th>
                    <th scope="col">Unitario</th>
                    <th scope="col">Total</th>
                    <th scope="col">Guardar</th>
                    <th scope="col">Borrar</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var venta in Model.Ventas)
                {
                    <tr>
                        <td>@venta.IdVenta</td>
                        <td>@venta.Producto.Nombre</td>
                        <td>@venta.Cantidad</td>
                        <td>
                            <select class="form-select cboTipoPrecio" data-idproducto="@venta.IdProducto" data-cantidad="@venta.Cantidad">
                                <option value="0" selected="selected">Seleccione</option>
                                @foreach (var tipoPrecio in Model.TipoPrecios)
                                {
                                    <option value="@tipoPrecio.IdTipoPrecio" data-precio="@tipoPrecio.Precio">@tipoPrecio.Nombre</option>
                                }
                                <option value="-1">Otro</option>
                            </select>
                        </td>
                        <td>@venta.Precio.ToString("C")</td>
                        <td>@venta.Total.ToString("C")</td>
                        <td>
                            <a class="text-primary cmdSave">
                                <i class="bi bi-download"></i>
                            </a>
                        </td>
                        <td>
                            <a asp-action="Eliminar" asp-route-idVenta="@venta.IdVenta" class="text-danger">
                                <i class="bi bi-eraser"></i>
                            </a>
                        </td>
                        <td style="display:none">@venta.IdProducto</td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="5" class="text-end"><strong>Gran Total:</strong></td>
                    <td id="granTotal" class="text-end"></td>
                    <td colspan="2"></td>
                </tr>
            </tfoot>
        </table>

    </div>
</div>
<div class="card mt-4" style="visibility:hidden">
    <div class="card-header bg-secondary text-white">
        <h3>Lista de Ventas</h3>
    </div>
    <div class="card-body">
        <a asp-action="Guardar" asp-controller="Mantenedor" class="btn btn-success mb-3">
            <i class="bi bi-plus-circle"></i> Crear Nuevo
        </a>
    </div>
</div>

@section Scripts {
    <script>

        $(document).ready(function () {

            function actualizarGranTotal() {
                let granTotal = 0;
                $("#tbVenta tbody tr").each(function () {
                    let total = parseFloat($(this).find('td:nth-child(6)').text().replace(/[^0-9.-]+/g,""));
                    if (!isNaN(total)) {
                        granTotal += total;
                    }
                });

                $("#granTotal").text(granTotal.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
            }

            actualizarGranTotal();

                    // Evento cuando se selecciona un tipo de precio
            $(document).on('change', '.cboTipoPrecio', function () {
                let selectedOption = $(this).find('option:selected');
                let precio = parseFloat(selectedOption.data('precio')) || 0;
                let cantidad = parseFloat($(this).data('cantidad')) || 0;
                let row = $(this).closest('tr');
                row.find('td:nth-child(5)').text(precio.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                let total = precio * cantidad;
                row.find('td:nth-child(6)').text(total.toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
                actualizarGranTotal();
            });

            // Evento para guardar cambios en una venta existente
            $(document).on('click', '.cmdSave', function (e) {
                let row = $(this).closest('tr');
                let _Tipoprecio = row.find('.cboTipoPrecio option:selected').val();
                let _IdVenta = row.find('td:nth-child(1)').text();
                let _Cantidad = row.find('td:nth-child(3)').text();
                let _Unitario = parseFloat(row.find('td:nth-child(5)').text().replace(/[^0-9.-]+/g, "")) || 0;
                let _IdProducto = row.find('td:nth-child(9)').text();

                // Crear objeto de venta
                let venta = {
                    IdVenta: _IdVenta,
                    IdProducto: _IdProducto,
                    Cantidad: _Cantidad,
                    Precio: _Unitario,
                    IdCliente: 1,
                    IdTipoPrecio: _Tipoprecio
                };

                $.ajax({
                    url: '@Url.Action("GuardarVenta", "Mantenedor")',
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    data: JSON.stringify(venta),
                    success: function (response) {
                        alert(response.message);
                    },
                    error: function () {
                        alert("Error al guardar la venta.");
                    }
                });
                actualizarGranTotal();
            });

            // Evento cuando se selecciona un producto
            $('#cboProductos').on('change', function () {
                let selectedOption = $(this).find('option:selected');
                let nombre = selectedOption.data('nombre');
                let categoria = selectedOption.data('categoria');
                let descripcion = selectedOption.text();

                $('#productoNombre').text(nombre);
                $('#productoDescripcion').text(descripcion);
                $('#productoCategoria').text(categoria);
                $('#txtCantidad').focus();
            });

            // Evento para agregar un nuevo producto a la tabla
            $('#cmdAddTable').on('click', function (e) {
                e.preventDefault();

                let selectedOption = $('#cboProductos').find('option:selected');
                let nombre = selectedOption.data('nombre');
                let categoria = selectedOption.data('categoria');
                let descripcion = selectedOption.text();
                let cantidad = $('#txtCantidad').val();
                let IdProducto = selectedOption.val();

                // Crear objeto de venta
                let venta = {
                    IdVenta: 0,
                    IdProducto: IdProducto,
                    Cantidad: cantidad,
                    Precio: 0,
                    IdCliente: 1,
                    IdTipoPrecio: 0
                };

                $.ajax({
                    url: '@Url.Action("GuardarVenta", "Mantenedor")',
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    data: JSON.stringify(venta),
                    success: function (response) {
                        if (response.success) {
                            // var SelectCell = $("#tbVenta tr:last td:eq(3)").clone();
                            var clonedSelect = $(".cboTipoPrecio").first().clone();

                            clonedSelect.attr('data-idproducto', 0);
                            clonedSelect.attr('data-cantidad', 0);

                            var deleteUrl = '/Mantenedor/Eliminar?idVenta=' + response.idVenta;
                            var BorrarCell = $("<a>").addClass("text-danger").attr("href", deleteUrl).html("<i class='bi bi-eraser'></i>");
                            var EditaCell = $("<a>").addClass("text-primary cmdSave").html("<i class='bi bi-download'></i>");


                            $('#tbVenta tbody').append(
                                $("<tr>").append(
                                    $("<td>").text(response.idVenta),
                                    $("<td>").text(descripcion),
                                    $("<td>").text(cantidad),
                                    $("<td>").html(clonedSelect),
                                    $("<td>").text('0'),
                                    $("<td>").text('0'),
                                    $("<td>").html(EditaCell),
                                    $("<td>").html(BorrarCell),
                                    $("<td style='display:none'>").text(IdProducto)
                                )
                            );

                            limpia();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert("Error al guardar la venta.");
                    }
                });
            });

            $(document).on('click', '.text-danger', function () {
                setTimeout(actualizarGranTotal, 500); // Dar tiempo para que se elimine el item antes de actualizar
            });

            function limpia() {
                $('#cboProductos').val(0);
                $('#productoNombre').text('');
                $('#productoDescripcion').text('');
                $('#productoCategoria').text('');
                $('#txtCantidad').val('0');
            }
        });
    </script>
}
